#Import libraries
import piplite
await piplite.install(['folium'])
await piplite.install(['pandas'])
import folium
import pandas as pd
from folium.plugins import MarkerCluster
from folium.plugins import MousePosition
from folium.features import DivIcon

#Download and read 'spacex_launch_geo.csv'
from js import fetch
import io
URL = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/spacex_launch_geo.csv'
resp = await fetch(URL)
spacex_csv_file = io.BytesIO((await resp.arrayBuffer()).to_py())
spacex_df=pd.read_csv(spacex_csv_file)

#Select relevant sub-columns
spacex_df = spacex_df[['Launch Site', 'Lat', 'Long', 'class']]
launch_sites_df = spacex_df.groupby(['Launch Site'], as_index=False).first()
launch_sites_df = launch_sites_df[['Launch Site', 'Lat', 'Long']]
launch_sites_df

#Start location is NASA Johnson Space Center
nasa_coordinate = [29.559684888503615, -95.0830971930759]
site_map = folium.Map(location=nasa_coordinate, zoom_start=10)

#Create a blue circle at NASA Johnson Space Center's coordinate with a popup label showing its name
circle = folium.Circle(nasa_coordinate, radius=1000, color='#d35400', fill=True).add_child(folium.Popup('NASA Johnson Space Center'))

#Create a blue circle at NASA Johnson Space Center's coordinate with a icon showing its name
marker = folium.map.Marker(
    nasa_coordinate,
    icon=DivIcon(
        icon_size=(20,20),
        icon_anchor=(0,0),
        html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'NASA JSC',
        )
    )
site_map.add_child(circle)
site_map.add_child(marker)

#Initialize folium map
site_map = folium.Map(location=nasa_coordinate, zoom_start=5)

#Adding a circle object for each launch site based on its coordinate (Lat, Long) values. In addition, add Launch site name as a popup label

#Coordinates for circles
CCAFS_LC_40 = [28.562302, -80.577356]
CCAFS_SLC_40 = [28.563197, -80.576820]
KSC_LC_39A = [28.573255, -80.646895]
VAFB_SLC_4E = [34.632834, -120.610745]

#Create 4 circle objects, one for each launch site
circle1 = folium.Circle(CCAFS_LC_40, radius=1000, color='#d35400', fill=True).add_child(folium.Popup('CCAFS_LC_40'))
circle2 = folium.Circle(CCAFS_SLC_40, radius=1000, color='#d35400', fill=True).add_child(folium.Popup('CCAFS_SLC_40'))
circle3 = folium.Circle(KSC_LC_39A, radius=1000, color='#d35400', fill=True).add_child(folium.Popup('KSC_LC_39A'))
circle4 = folium.Circle(VAFB_SLC_4E, radius=1000, color='#d35400', fill=True).add_child(folium.Popup('VAFB_SLC_4E'))

#Marker 1
marker1 = folium.map.Marker(
    CCAFS_LC_40,
    # Create an icon as a text label
    icon=DivIcon(
        icon_size=(20,20),
        icon_anchor=(0,0),
        html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'CCAFS_LC_40',
        )
    )
#Marker 2
marker2 = folium.map.Marker(
    CCAFS_SLC_40,
    # Create an icon as a text label
    icon=DivIcon(
        icon_size=(20,20),
        icon_anchor=(0,0),
        html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'CCAFS_SLC_40',
        )
    )
#Marker 3
marker3 = folium.map.Marker(
    KSC_LC_39A,
    # Create an icon as a text label
    icon=DivIcon(
        icon_size=(20,20),
        icon_anchor=(0,0),
        html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'KSC_LC_39A',
        )
    )
#Marker 4
marker4 = folium.map.Marker(
    VAFB_SLC_4E,
    # Create an icon as a text label
    icon=DivIcon(
        icon_size=(20,20),
        icon_anchor=(0,0),
        html='<div style="font-size: 12; color:#d35400;"><b>%s</b></div>' % 'VAFB_SLC_4E',
        )
    )

#Adding circles and markers to map
site_map.add_child(circle1)
site_map.add_child(circle2)
site_map.add_child(circle3)
site_map.add_child(circle4)

site_map.add_child(marker1)
site_map.add_child(marker2)
site_map.add_child(marker3)
site_map.add_child(marker4)

#Creating a marker cluster
spacex_df1 = spacex_df

x = 1
for x in range(len(spacex_df1)):
    if spacex_df1.loc[x, "class"] == 1:
        spacex_df1.loc[x, "Marker color"] = "Green"
    else:
        spacex_df1.loc[x, "Marker color"] = "Red"
    x = x+1


#Add markers to map
site_map.add_child(marker_cluster)

x=1
for x in range(len(spacex_df1)):
    marker_1 = folium.map.Marker(
    spacex_df1.loc[x, "Launch Site"],
    icon=DivIcon(
        icon_size=(20,20),
        icon_anchor=(0,0),
        icon=folium.Icon(color='white', icon_color = spacex_df1.loc[x, 'Market color'],
        )
    ))
    x=x+1
    site_map.add_child(marker_1)
    marker_cluster.add_child(marker_1)

#Calculate distances between launch sites and proximities

#Add Mouse Position to get the coordinate (Lat, Long) for a mouse over on the map

formatter = "function(num) {return L.Util.formatNum(num, 5);};"
mouse_position = MousePosition(
    position='topright',
    separator=' Long: ',
    empty_string='NaN',
    lng_first=False,
    num_digits=20,
    prefix='Lat:',
    lat_formatter=formatter,
    lng_formatter=formatter,
)

site_map.add_child(mouse_position)
site_map

#Return the dsitance from launch site to proximity
from math import sin, cos, sqrt, atan2, radians

def calculate_distance(lat1, lon1, lat2, lon2):
    R = 6373.0

    lat1 = radians(lat1)
    lon1 = radians(lon1)
    lat2 = radians(lat2)
    lon2 = radians(lon2)

    dlon = lon2 - lon1
    dlat = lat2 - lat1

    a = sin(dlat / 2)**2 + cos(lat1) * cos(lat2) * sin(dlon / 2)**2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))

    distance = R * c
    return distance
